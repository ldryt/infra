{ config, pkgs, pkgs-unstable-unfree, ... }:
let
  dns = builtins.fromJSON (builtins.readFile ../dns.json);
  dataDir = "/mnt/ocis-data";
  oidcClientID = "ocis-web";
in
{
  sops.secrets."services/ocis/config/ocis.yaml" = {
    owner = config.services.ocis.user;
    path = "${config.services.ocis.configDir}/ocis.yaml";
  };

  services.ocis = {
    enable = true;
    package = pkgs-unstable-unfree.ocis-bin;

    # read-only folder containing ocis.yaml, managed by sops
    # ocis.yaml generated by: ocis init --config-path ./config --insecure true
    configDir = "/etc/ocis";

    stateDir = dataDir;

    url = "https://${dns.subdomains.ocis}.${dns.zone}";
    environment = {
      PROXY_TLS = "false";

      OCIS_OIDC_ISSUER = "https://${dns.subdomains.authelia}.${dns.zone}";
      WEB_OIDC_CLIENT_ID = oidcClientID;

      PROXY_AUTOPROVISION_ACCOUNTS = "true";
      PROXY_USER_OIDC_CLAIM = "preferred_username";
      PROXY_USER_CS3_CLAIM = "username";
      PROXY_OIDC_REWRITE_WELLKNOWN = "true";

      # sadly, ocis does not seem to manage how to verify access tokens
      PROXY_OIDC_ACCESS_TOKEN_VERIFY_METHOD = "none";
    };
  };

  # https://doc.owncloud.com/ocis/next/deployment/services/s-list/idp.html
  services.authelia.instances.main.settings.identity_providers.oidc = {
    # Extend the access and refresh token lifespan from the default 30m to work around ownCloud client re-authentication prompts every few hours.
    # It should be possible to remove this once Authelia supports dynamic client registration (DCR).
    # Note: ownCloud's built-in IDP uses a value of 30d.

    cors.allowed_origins = [ config.services.ocis.url ];

    clients = [
      {
        client_name = "ownCloud Web";
        client_id = oidcClientID;
        public = true;
        scopes = [
          "email"
          "groups"
          "openid"
          "profile"
        ];
        redirect_uris = [
          "https://${dns.subdomains.ocis}.${dns.zone}/"
          "https://${dns.subdomains.ocis}.${dns.zone}/oidc-callback.html"
          "https://${dns.subdomains.ocis}.${dns.zone}/oidc-silent-redirect.html"
        ];
      }
      {
        client_name = "ownCloud Desktop";
        client_id = "xdXOt13JKxym1B1QcEncf2XDkLAexMBFwiT9j6EfhhHFJhs2KM9jbjTmf8JBXE69";
        # client_secret = "UBntmLjC2yYCeHwsyj73Uwo9TAaecAetRwMw0xYcvNL9yRdLSUi0hUAHfvCHFeFh";
        client_secret = "$pbkdf2-sha512$310000$.z/6sV7qQSx1.5zPetVVCQ$JIEPOTFTSokJjDNVhlMLq7tYnHd/E17wSHW.GYXQA0QjfTPqTosyRr7qSHxSiPmXympfTbGF6FmnnX9on.uQng";
        consent_mode = "implicit";
        scopes = [
          "email"
          "groups"
          "openid"
          "profile"
          "offline_access"
        ];
        redirect_uris = [
          "http://127.0.0.1"
          "http://localhost"
        ];
        grant_types = [
          "refresh_token"
          "authorization_code"
        ];
        response_types = ["code"];
      }
      {
        client_name = "ownCloud Android";
        client_id = "e4rAsNUSIUs0lF4nbv9FmCeUkTlV9GdgTLDH1b5uie7syb90SzEVrbN7HIpmWJeD";
        # client_secret = "dInFYGV33xKzhbRmpqQltYNdfLdJIfJ9L5ISoKhNoT9qZftpdWSP71VrpGR9pmoD";
        client_secret = "$pbkdf2-sha512$310000$Grnc1pW0blLl.2B1aEfEvg$JWW3s83SXkgSvoykJ5yD4i11gfrxBOEEGrKXjbyAh.PmVc14FDwSAzxVn7JFXjvO0B0V2RxFsrUT4RZoBK93ug";
        consent_mode = "implicit";
        scopes = [
          "email"
          "groups"
          "openid"
          "profile"
          "offline_access"
        ];
        redirect_uris = [ "oc://android.owncloud.com" ];
        grant_types = [
          "refresh_token"
          "authorization_code"
        ];
        response_types = ["code"];
      }
      {
        client_name = "ownCloud iOS";
        client_id = "mxd5OQDk6es5LzOzRvidJNfXLUZS2oN3oUFeXPP8LpPrhx3UroJFduGEYIBOxkY1";
        # client_secret = "KFeFWWEZO9TkisIQzR3fo7hfiMXlOpaqP8CFuTbSHzV1TUuGECglPxpiVKJfOXIx";
        client_secret = "$pbkdf2-sha512$310000$O1agtCxk9EGgvVLZBJumVQ$4UmQmefvIe5jQx1iJDN5pFIuu6CG.v.59wK7xCk3KU6pGbtxGrO0OYtQ/m/TPzE1xZnxgO12.ujXN20sCr/LkQ";
        consent_mode = "implicit";
        scopes = [
          "email"
          "groups"
          "openid"
          "profile"
          "offline_access"
        ];
        redirect_uris = [
          "oc://ios.owncloud.com"
          "oc.ios://ios.owncloud.com"
        ];
        grant_types = [
          "refresh_token"
          "authorization_code"
        ];
        response_types = ["code"];
      }
    ];
  };

  sops.secrets."system/smb/glouton/ocis-data/credentials" = { };
  environment.systemPackages = [ pkgs.cifs-utils ];
  fileSystems."${dataDir}" = {
    device = "//u391790-sub2.your-storagebox.de/u391790-sub2";
    fsType = "cifs";
    options = [
      "credentials=${config.sops.secrets."system/smb/glouton/ocis-data/credentials".path}"

      "uid=${toString config.services.ocis.user}"
      "forceuid"
      "gid=${toString config.services.ocis.group}"
      "forcegid"
      "file_mode=0770"
      "dir_mode=0770"

      "vers=3.1.1"
      "sec=ntlmsspi"
      "seal"
      "hard"
      "mfsymlinks"

      "async"
      "noatime"
      "cache=loose"
      "actimeo=3600"
      "locallease"
      "rsize=4194304"
      "wsize=4194304"
      "fsc"
    ];
  };

  services.nginx.virtualHosts."${dns.subdomains.ocis}.${dns.zone}" = {
    enableACME = true;
    forceSSL = true;
    kTLS = true;
    locations."/" = {
      proxyPass = "http://${config.services.ocis.address}:${toString config.services.ocis.port}";
      extraConfig = ''
        client_max_body_size 0;
      '';
    };
  };

  ldryt-infra.backups.ocis = {
    paths = [ dataDir ];
  };
}
