{
  config,
  pkgs,
  vars,
  ...
}:
{
  sops.secrets."services/ocis/secretsConfig".owner = config.users.users.colon.name;

  virtualisation.oci-containers.containers = {
    "ocis" = {
      image = "docker.io/owncloud/ocis:4.0.6@sha256:f4e4ebd5abfbc1da667fdc0e072061208597a0afe60ee8792be246deb09eb9b2";
      entrypoint = "/bin/sh";
      cmd = [
        "-c"
        "ocis server"
      ];
      environment = {
        PROXY_HTTP_ADDR = "0.0.0.0:9200";
        OCIS_URL = "https://${vars.services.ocis.subdomain}.${vars.zone}";

        OCIS_OIDC_ISSUER = "https://${vars.services.keycloak.subdomain}.${vars.zone}/realms/master";
        WEB_OIDC_CLIENT_ID = vars.services.ocis.oidcID;
        PROXY_TLS = "false";
        PROXY_AUTOPROVISION_ACCOUNTS = "true";
        PROXY_USER_OIDC_CLAIM = "preferred_username";
        PROXY_USER_CS3_CLAIM = "username";
        # PROXY_ROLE_ASSIGNMENT_DRIVER = "oidc";
        PROXY_OIDC_REWRITE_WELLKNOWN = "true";
      };
      # secretsConfig contains all the secrets needed by ocis (generated by "ocis init")
      volumes = [
        "${vars.services.ocis.dataDir}:/var/lib/ocis"
        "${config.sops.secrets."services/ocis/secretsConfig".path}:/etc/ocis/ocis.yaml:ro"
      ];
      ports = [ "127.0.0.1:${vars.services.ocis.internalPort}:9200" ];
    };
  };

  sops.secrets."system/smb/glouton/ocis-data/credentials" = { };
  environment.systemPackages = [ pkgs.cifs-utils ];
  fileSystems."${vars.services.ocis.dataDir}" = {
    device = vars.sensitive.services.ocis.smbShare;
    fsType = "cifs";
    options = [
      "async,rw,auto,nofail,credentials=${
        config.sops.secrets."system/smb/glouton/ocis-data/credentials".path
      },uid=${toString config.users.users.colon.uid},cache=loose,fsc,sfu,mfsymlinks"
    ];
  };

  services.nginx.virtualHosts."${vars.services.ocis.subdomain}.${vars.zone}" = {
    enableACME = true;
    forceSSL = true;
    kTLS = true;
    locations."/" = {
      proxyPass = "http://127.0.0.1:${vars.services.ocis.internalPort}";
      extraConfig = ''
        client_max_body_size 0;
      '';
    };
  };

  kiwi.backups.ocis = {
    paths = [ vars.services.ocis.dataDir ];
  };
}
